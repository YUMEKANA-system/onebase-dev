/*
ベース幅を追加
@include baseWidth(600px);
*/
@mixin baseWidth ($width:600px){
  width:$width;

  @include media ("sp-s") {
    width: 100%;
  }
}
@mixin contentsWidth ($width:600px){
  width:$width;

  @include media ("sp-s") {
    width: 100%;
  }
}

/*
ベースマージンを追加
@include baseMargin;
*/
@mixin baseMargin {
  margin:60px auto 90px;

  @include media ("sp-s") {
    margin: 0 auto;
  }
}


/*ボタンを作成する
.my-submit-button {
  @include submit-button(#007bff, #fff);
}
*/
@mixin submit-button($background-color, $text-color) {
  color: $text-color;
  background-color: $background-color;
  cursor: pointer;
  text-align: center;
  margin: 0 auto;
  padding: 0;
  font-weight: normal;
  width: 350px;
  height: $btn-height;
  line-height: $btn-height;
  border: none;
  filter: drop-shadow(0px 3px 2px rgba(98, 125, 130, .4));
  border-radius: 3px;
  font-size: 14px;
  transition: background-color 0.3s ease;

  &:hover {
    background-color: lighten($background-color, 10%);
  }

  &:active {
    background-color: darken($background-color, 10%);
  }

  @include media ("tb-l") {
    width:350px;
  }
  @include media ("tb-s") {
    width:100%;
  }
  @include media ("sp-l") {
    width:100%;
  }
  @include media ("sp-s") {
    width:100%;
    height: $btn-height + 6px;
    line-height: $btn-height + 6px;
  }
}

/*
input
@include input-text;
*/
@mixin input-text {
  width: 100%;
  height: $btn-height;
  line-height: $btn-height;
  border: 0.5px solid #b5b5b6;
  background-color: #fff;
  border-radius: 3px;
  outline: none;
  padding: 10px;

  &:hover {
    opacity: 0.9;
  }

  @include media ("sp-s") {
    height: $btn-height + 6px;
    line-height:$btn-height + 6px;
  }
}

/*
googleFont-Fredericka
@include googleFont-Fredericka;
*/
@mixin googleFont-Fredericka {
  font-weight: 400;
  font-family: 'Fredericka the Great',cursive;
}

@mixin clearfix {
    &::after {
        content:"";
        display:block;
        clear:both;
    }
}

/*
バックグラウンドカラーを追加
@include backGroundColor(#fff, 1);
テキストシャドウを追加
@include textShadow(#fff, 1);
ボックスシャドウを追加
@include boxShadow(#ac984e, 1);
*/
@mixin backGroundColor ($color:#fff,$alpha:1){
  background-color:rgba($color,$alpha);
}
@mixin textShadow ($color:#000,$alpha:0.5){
    text-shadow:1px 1px 2px rgba($color,$alpha);
}
@mixin boxShadow ($color:#ac984e,$alpha:0.4){
  box-shadow:0px 0px 10px rgba($color,$alpha);
}

/*arrowを追加する
li {
    @include linkArrow("right");
}
*/
@mixin linkArrow($side:"right",$color:#ccc) {
    @if ($side != "right" and $side == "left"){
        @warn "引数は「right」か「left」を入力してください。"
    }

    position:relative;
    @if($side == "right"){
        padding-right: 20px;
    } @else if ($side == "left"){
        padding-left:20px;
    }

    &::after {
        content:"";
        display: block;
        width:5px;
        height:5px;
        position: absolute;
        top: 50%;
        @if($side == "right"){
            right: 10px;
        } @else if ($side == "left"){
            left:10px;
        }
        margin-top:-2.5px;
        border-top:1px solid $color;
        border-right:1px solid $color;
        transform:rotate(45deg);
    }
}


/*リップルエフェクト*/
@mixin ripple {
    position: relative;
    overflow: hidden;

    &:after {
      content: '';
      display: block;
      position: absolute;
      width: 100%;
      height: 100%;
      top: 0;
      left: 0;
      pointer-events: none;
      background-image: radial-gradient(circle, #000 10%, transparent 10.01%);
      background-repeat: no-repeat;
      background-position: 50%;
      transform: scale(10, 10);
      opacity: 0;
      transition: transform .5s, opacity 1s;
    }

    &:active:after {
      transform: scale(0, 0);
      opacity: .2;
      transition: 0s;
    }
  }

//フォント自動調整
  @mixin font-size($min-size, $max-size, $min-view, $max-view) {
    font-size: $min-size;
    @media only screen and (min-width: $min-view) and (max-width: $max-view) {
      font-size: calc(#{$min-size} + #{($max-size - $min-size)} * ((100vw - #{$min-view}) / #{($max-view - $min-view)}));
    }
    @media only screen and (min-width: $max-view) {
      font-size: $max-size;
    }
  }


/*グラデーションを生成する
.gradient-box {
    @include gradient(#f0f, #0ff);
  }
*/
  @mixin gradient($start-color, $end-color, $direction: to bottom) {
    background: $start-color;
    background: -moz-linear-gradient($direction, $start-color 0%, $end-color 100%);
    background: -webkit-linear-gradient($direction, $start-color 0%, $end-color 100%);
    background: linear-gradient($direction, $start-color 0%, $end-color 100%);
  }


/*フレキシブルボックスを作成する
.flex-container {
  @include flexbox(column, space-around, center);
}
*/
  @mixin flexbox($direction: row, $justify: center, $align: center) {
  display: flex;
  flex-direction: $direction;
  justify-content: $justify;
  align-items: $align;
}


/*ページ全体を覆うモーダルを作成する
.modal {
  @include cover();
}
*/
@mixin modal() {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.5);
    z-index: 999;
  }

/*テキストのトランスフォームを作成する
.text-uppercase {
  @include text-transform(uppercase);
}
*/
  @mixin text-transform($transforms...) {
    $transformed: ();
    @each $transform in $transforms {
      @if $transform == capitalize {
        $transformed: append($transformed, capitalize);
      }
      @else if $transform == lowercase {
        $transformed: append($transformed, lowercase);
      }
      @else if $transform == uppercase {
        $transformed: append($transformed, uppercase);
      }
      @else {
        @error "Invalid transform: #{$transform}";
      }
    }
    text-transform: $transformed;
  }
